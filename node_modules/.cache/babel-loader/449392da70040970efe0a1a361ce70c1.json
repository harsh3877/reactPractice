{"ast":null,"code":"import { COMMENTS } from \"../shared/comments\";\nimport * as ActionType from \"./actionTypes\";\nexport const Comments = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    errMess: null,\n    comments: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionType.ADD_COMMENTS:\n      return { ...state,\n        isLoading: false,\n        erMsg: null,\n        comments: action.payload\n      };\n\n    case ActionType.COMMENTS_FAILED:\n      return { ...state,\n        isLoading: false,\n        erMsg: action.payload,\n        comments: []\n      };\n\n    case ActionType.ADD_COMMENT:\n      var comment = action.payload;\n      comment.id = state.comments.length;\n      comment.date = new Date().toISOString();\n      return { ...state,\n        comments: state.comments.concat(comment)\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["COMMENTS","ActionType","Comments","state","errMess","comments","action","type","ADD_COMMENTS","isLoading","erMsg","payload","COMMENTS_FAILED","ADD_COMMENT","comment","id","length","date","Date","toISOString","concat"],"sources":["C:/Users/Lenovo/Desktop/thisapp/src/redux/comments.js"],"sourcesContent":["import { COMMENTS } from \"../shared/comments\";\r\nimport * as ActionType from \"./actionTypes\";\r\n\r\nexport const Comments = (\r\n  state = {\r\n    errMess: null,\r\n    comments: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionType.ADD_COMMENTS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        erMsg: null,\r\n        comments: action.payload,\r\n      };\r\n\r\n    case ActionType.COMMENTS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        erMsg: action.payload,\r\n        comments: [],\r\n      };\r\n\r\n    case ActionType.ADD_COMMENT:\r\n      var comment = action.payload;\r\n      comment.id = state.comments.length;\r\n      comment.date = new Date().toISOString();\r\n      return { ...state, comments: state.comments.concat(comment) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAMnB;EAAA,IALHC,KAKG,uEALK;IACNC,OAAO,EAAE,IADH;IAENC,QAAQ,EAAE;EAFJ,CAKL;EAAA,IADHC,MACG;;EACH,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKN,UAAU,CAACO,YAAhB;MACE,OAAO,EACL,GAAGL,KADE;QAELM,SAAS,EAAE,KAFN;QAGLC,KAAK,EAAE,IAHF;QAILL,QAAQ,EAAEC,MAAM,CAACK;MAJZ,CAAP;;IAOF,KAAKV,UAAU,CAACW,eAAhB;MACE,OAAO,EACL,GAAGT,KADE;QAELM,SAAS,EAAE,KAFN;QAGLC,KAAK,EAAEJ,MAAM,CAACK,OAHT;QAILN,QAAQ,EAAE;MAJL,CAAP;;IAOF,KAAKJ,UAAU,CAACY,WAAhB;MACE,IAAIC,OAAO,GAAGR,MAAM,CAACK,OAArB;MACAG,OAAO,CAACC,EAAR,GAAaZ,KAAK,CAACE,QAAN,CAAeW,MAA5B;MACAF,OAAO,CAACG,IAAR,GAAe,IAAIC,IAAJ,GAAWC,WAAX,EAAf;MACA,OAAO,EAAE,GAAGhB,KAAL;QAAYE,QAAQ,EAAEF,KAAK,CAACE,QAAN,CAAee,MAAf,CAAsBN,OAAtB;MAAtB,CAAP;;IACF;MACE,OAAOX,KAAP;EAvBJ;AAyBD,CAhCM;KAAMD,Q"},"metadata":{},"sourceType":"module"}